#ifndef __CC_OPERATINO_H
#define __CC_OPERATINO_H
void nop();
void add(int r1, int r2);
void sub(int r1, int r2);
void mult(int r1, int r2);
void div(int r1, int r2);
void addI(int r1, int c2);
void subI(int r1, int c2);
void div(int r1, int c2);
void rsubI(int r1, int c2);
void multI(int r1, int c2);
void divI(int r1, int c2);
void rdivI(int r1, int c2);
void lshift(int r1, int r2);
void lshiftI(int r1, int c2);
void rshift(int r1, int r2);
void rshiftI(int r1, int c2);
void and(int r1, int r2);
void andI(int r1, int c2);
void or(int r1, int r2);
void orI(int r1, int c2);
void xor(int r1, int r2);
void xorI(int r1, int c2);
void loadI(int c1);
void load(int r1);
void loadAI(int r1, int c2);
void loadA0(int r1, int r2);
void cload(int r1);
void cloadAI(int r1, int c2);
void cloadA0(int r1, int r2);
void store(int r1);
void storeAI(int r1);
void storeA0(int r1);
void cstore(int r1);
void cstoreAI(int r1);
void cstoreA0(int r1);
void i2i(int r1);
void c2c(int r1);
void c2i(int r1);
void i2c(int r1);
void jumpI(int l1);
void jump(int r1);
void cbr(int r1);
void cmp_LT(int r1, int r2);
void cmp_LE(int r1, int r2);
void cmp_EQ(int r1, int r2);
void cmp_GE(int r1, int r2);
void cmp_GT(int r1, int r2);
void cmp_NE(int r1, int r2);
#endif
