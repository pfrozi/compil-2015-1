Terminals unused in grammar

   TK_CE_COLON
   TK_CE_BRA_ANGL_OPEN
   TK_CE_BRA_ANGL_CLOSE
   TK_CE_EXCL
   TK_CE_AMP
   TK_CE_DOLLAR
   TOKEN_ERRO


Grammar

    0 $accept: programa $end

    1 programa: input TOKEN_EOF

    2 input: %empty
    3      | line input
    4      | global_line input

    5 global_line: global_statement

    6 line: function

    7 endline: TK_CE_SEMICOLON

    8 global_statement: statement_array endline
    9                 | statement endline
   10                 | statement
   11                 | statement array_int

   12 array: TK_CE_BRA_OPEN lst_exp TK_CE_BRA_CLOSE

   13 array_int: TK_CE_BRA_OPEN lst_int TK_CE_BRA_CLOSE

   14 statement_array: TK_PR_STATIC type TK_IDENTIFICADOR array_int
   15                | type TK_IDENTIFICADOR array_int

   16 statement: TK_PR_STATIC type TK_IDENTIFICADOR
   17          | type TK_IDENTIFICADOR
   18          | TK_PR_STATIC TK_IDENTIFICADOR
   19          | TK_IDENTIFICADOR

   20 local_statement: const_statement TK_OC_LE TK_IDENTIFICADOR
   21                | const_statement TK_OC_LE literal
   22                | statement TK_OC_LE TK_IDENTIFICADOR
   23                | statement TK_OC_LE literal
   24                | const_statement
   25                | statement
   26                | const_statement TK_OC_LE
   27                | statement TK_OC_LE

   28 const_statement: TK_PR_STATIC TK_PR_CONST type TK_IDENTIFICADOR
   29                | TK_PR_STATIC TK_PR_CONST TK_IDENTIFICADOR
   30                | TK_PR_STATIC TK_PR_CONST type
   31                | TK_PR_CONST type TK_IDENTIFICADOR
   32                | TK_PR_CONST TK_IDENTIFICADOR
   33                | TK_PR_CONST type

   34 literal: op_literal
   35        | TK_LIT_STRING

   36 op_literal: TK_LIT_INT
   37           | TK_LIT_FLOAT
   38           | TK_LIT_FALSE
   39           | TK_LIT_TRUE
   40           | TK_LIT_CHAR
   41           | TK_CE_PLUS TK_LIT_INT
   42           | TK_CE_PLUS TK_LIT_FLOAT

   43 type: TK_PR_INT
   44     | TK_PR_FLOAT
   45     | TK_PR_BOOL
   46     | TK_PR_CHAR
   47     | TK_PR_STRING

   48 exp: val_exp
   49    | TK_LIT_STRING

   50 val_exp: exp_bool

   51 exp_bool: exp_bool TK_OC_LT exp_bool_ou
   52         | exp_bool TK_OC_GT exp_bool_ou
   53         | exp_bool TK_OC_LE exp_bool_ou
   54         | exp_bool TK_OC_GE exp_bool_ou
   55         | exp_bool TK_OC_EQ exp_bool_ou
   56         | exp_bool TK_OC_NE exp_bool_ou
   57         | exp_bool_ou

   58 exp_bool_ou: exp_bool_ou TK_OC_OR exp_bool_e
   59            | exp_bool_e

   60 exp_bool_e: exp_bool_e TK_OC_AND exp_art
   61           | exp_art

   62 exp_art: exp_art TK_CE_PLUS exp_art_t
   63        | exp_art TK_CE_MINUS exp_art_t
   64        | exp_art_t

   65 exp_art_t: exp_art_t TK_CE_MUL exp_art_par
   66          | exp_art_t TK_CE_DIV exp_art_par
   67          | exp_art_par

   68 exp_art_par: TK_CE_PAR_OPEN exp_bool TK_CE_PAR_CLOSE
   69            | exp_neg

   70 exp_neg: TK_CE_MINUS exp_end
   71        | TK_OC_NEG exp_end
   72        | exp_end

   73 exp_end: func_call
   74        | op_literal
   75        | TK_IDENTIFICADOR
   76        | TK_IDENTIFICADOR array

   77 lst_exp: exp TK_CE_COMMA lst_exp
   78        | exp

   79 lst_int: TK_LIT_INT TK_CE_COMMA lst_int
   80        | TK_LIT_INT

   81 command_block: init_scope command close_scope

   82 init_scope: TK_CE_BRA_CURL_OPEN

   83 close_scope: TK_CE_BRA_CURL_CLOSE

   84 command: %empty
   85        | command2 endline command
   86        | command2

   87 command2: single_command
   88         | command_block
   89         | flow_command
   90         | endline

   91 single_command: func_call
   92               | local_statement
   93               | in
   94               | out
   95               | ret
   96               | assignment

   97 flow_command: cond
   98             | whiledo
   99             | dowhile

  100 $@1: %empty

  101 function: func_head init_scope $@1 command close_scope

  102 func_head: TK_PR_STATIC type TK_IDENTIFICADOR func_head_params
  103          | type TK_IDENTIFICADOR func_head_params
  104          | type func_head_params
  105          | TK_IDENTIFICADOR func_head_params

  106 func_head_params: TK_CE_PAR_OPEN TK_CE_PAR_CLOSE
  107                 | TK_CE_PAR_OPEN func_params TK_CE_PAR_CLOSE
  108                 | TK_CE_PAR_CLOSE
  109                 | TK_CE_PAR_OPEN

  110 func_params: type TK_IDENTIFICADOR TK_CE_COMMA func_params
  111            | TK_PR_CONST type TK_IDENTIFICADOR TK_CE_COMMA func_params
  112            | type TK_IDENTIFICADOR
  113            | TK_PR_CONST type TK_IDENTIFICADOR
  114            | TK_IDENTIFICADOR TK_CE_COMMA func_params
  115            | TK_PR_CONST TK_IDENTIFICADOR TK_CE_COMMA func_params
  116            | TK_IDENTIFICADOR
  117            | TK_PR_CONST TK_IDENTIFICADOR
  118            | type
  119            | type TK_CE_COMMA func_params

  120 assignment: TK_IDENTIFICADOR TK_CE_EQUAL exp
  121           | TK_IDENTIFICADOR array TK_CE_EQUAL exp
  122           | TK_IDENTIFICADOR TK_CE_EQUAL
  123           | TK_IDENTIFICADOR array TK_CE_EQUAL

  124 in: TK_PR_INPUT exp TK_CE_EG exp
  125   | TK_PR_INPUT TK_CE_EG exp
  126   | TK_PR_INPUT exp TK_CE_EG

  127 out: TK_PR_OUTPUT lst_exp
  128    | TK_PR_OUTPUT

  129 ret: TK_PR_RETURN exp
  130    | TK_PR_RETURN

  131 func_call: TK_IDENTIFICADOR TK_CE_PAR_OPEN TK_CE_PAR_CLOSE
  132          | TK_IDENTIFICADOR TK_CE_PAR_OPEN lst_exp TK_CE_PAR_CLOSE

  133 cond: TK_PR_IF TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_THEN command2
  134     | TK_PR_IF TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_THEN command2 TK_PR_ELSE command2
  135     | TK_PR_IF TK_CE_PAR_OPEN TK_CE_PAR_CLOSE TK_PR_THEN command2
  136     | TK_PR_IF TK_CE_PAR_OPEN exp TK_PR_THEN command2

  137 whiledo: TK_PR_WHILE TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_DO command2
  138        | TK_PR_WHILE TK_CE_PAR_OPEN TK_CE_PAR_CLOSE TK_PR_DO command2

  139 dowhile: TK_PR_DO command2 TK_PR_WHILE exp
  140        | TK_PR_DO command2 TK_PR_WHILE


Terminals, with rules where they appear

$end (0) 0
error (256)
TK_PR_INT (258) 43
TK_PR_FLOAT (259) 44
TK_PR_BOOL (260) 45
TK_PR_CHAR (261) 46
TK_PR_STRING (262) 47
TK_PR_IF (263) 133 134 135 136
TK_PR_THEN (264) 133 134 135 136
TK_PR_ELSE (265) 134
TK_PR_WHILE (266) 137 138 139 140
TK_PR_DO (267) 137 138 139 140
TK_PR_INPUT (268) 124 125 126
TK_PR_OUTPUT (269) 127 128
TK_PR_RETURN (270) 129 130
TK_PR_STATIC (271) 14 16 18 28 29 30 102
TK_PR_CONST (272) 28 29 30 31 32 33 111 113 115 117
TK_CE_COMMA (273) 77 79 110 111 114 115 119
TK_CE_SEMICOLON (274) 7
TK_CE_COLON (275)
TK_CE_PAR_OPEN (276) 68 106 107 109 131 132 133 134 135 136 137 138
TK_CE_PAR_CLOSE (277) 68 106 107 108 131 132 133 134 135 137 138
TK_CE_BRA_OPEN (278) 12 13
TK_CE_BRA_CLOSE (279) 12 13
TK_CE_BRA_CURL_OPEN (280) 82
TK_CE_BRA_CURL_CLOSE (281) 83
TK_CE_PLUS (282) 41 42 62
TK_CE_MINUS (283) 63 70
TK_CE_MUL (284) 65
TK_CE_DIV (285) 66
TK_CE_BRA_ANGL_OPEN (286)
TK_CE_BRA_ANGL_CLOSE (287)
TK_CE_EQUAL (288) 120 121 122 123
TK_CE_EXCL (289)
TK_CE_AMP (290)
TK_CE_EG (291) 124 125 126
TK_CE_DOLLAR (292)
TK_OC_LE (293) 20 21 22 23 26 27 53
TK_OC_GE (294) 54
TK_OC_EQ (295) 55
TK_OC_NE (296) 56
TK_OC_AND (297) 60
TK_OC_OR (298) 58
TK_OC_GT (299) 52
TK_OC_LT (300) 51
TK_OC_NEG (301) 71
TK_LIT_INT (302) 36 41 79 80
TK_LIT_FLOAT (303) 37 42
TK_LIT_FALSE (304) 38
TK_LIT_TRUE (305) 39
TK_LIT_CHAR (306) 40
TK_LIT_STRING (307) 35 49
TK_IDENTIFICADOR (308) 14 15 16 17 18 19 20 22 28 29 31 32 75 76 102
    103 105 110 111 112 113 114 115 116 117 120 121 122 123 131 132
TOKEN_ERRO (309)
TOKEN_EOF (310) 1


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
programa (57)
    on left: 1, on right: 0
input (58)
    on left: 2 3 4, on right: 1 3 4
global_line (59)
    on left: 5, on right: 4
line (60)
    on left: 6, on right: 3
endline (61)
    on left: 7, on right: 8 9 85 90
global_statement (62)
    on left: 8 9 10 11, on right: 5
array (63)
    on left: 12, on right: 76 121 123
array_int (64)
    on left: 13, on right: 11 14 15
statement_array (65)
    on left: 14 15, on right: 8
statement (66)
    on left: 16 17 18 19, on right: 9 10 11 22 23 25 27
local_statement (67)
    on left: 20 21 22 23 24 25 26 27, on right: 92
const_statement (68)
    on left: 28 29 30 31 32 33, on right: 20 21 24 26
literal (69)
    on left: 34 35, on right: 21 23
op_literal (70)
    on left: 36 37 38 39 40 41 42, on right: 34 74
type (71)
    on left: 43 44 45 46 47, on right: 14 15 16 17 28 30 31 33 102
    103 104 110 111 112 113 118 119
exp (72)
    on left: 48 49, on right: 77 78 120 121 124 125 126 129 133 134
    136 137 139
val_exp (73)
    on left: 50, on right: 48
exp_bool (74)
    on left: 51 52 53 54 55 56 57, on right: 50 51 52 53 54 55 56 68
exp_bool_ou (75)
    on left: 58 59, on right: 51 52 53 54 55 56 57 58
exp_bool_e (76)
    on left: 60 61, on right: 58 59 60
exp_art (77)
    on left: 62 63 64, on right: 60 61 62 63
exp_art_t (78)
    on left: 65 66 67, on right: 62 63 64 65 66
exp_art_par (79)
    on left: 68 69, on right: 65 66 67
exp_neg (80)
    on left: 70 71 72, on right: 69
exp_end (81)
    on left: 73 74 75 76, on right: 70 71 72
lst_exp (82)
    on left: 77 78, on right: 12 77 127 132
lst_int (83)
    on left: 79 80, on right: 13 79
command_block (84)
    on left: 81, on right: 88
init_scope (85)
    on left: 82, on right: 81 101
close_scope (86)
    on left: 83, on right: 81 101
command (87)
    on left: 84 85 86, on right: 81 85 101
command2 (88)
    on left: 87 88 89 90, on right: 85 86 133 134 135 136 137 138 139
    140
single_command (89)
    on left: 91 92 93 94 95 96, on right: 87
flow_command (90)
    on left: 97 98 99, on right: 89
function (91)
    on left: 101, on right: 6
$@1 (92)
    on left: 100, on right: 101
func_head (93)
    on left: 102 103 104 105, on right: 101
func_head_params (94)
    on left: 106 107 108 109, on right: 102 103 104 105
func_params (95)
    on left: 110 111 112 113 114 115 116 117 118 119, on right: 107
    110 111 114 115 119
assignment (96)
    on left: 120 121 122 123, on right: 96
in (97)
    on left: 124 125 126, on right: 93
out (98)
    on left: 127 128, on right: 94
ret (99)
    on left: 129 130, on right: 95
func_call (100)
    on left: 131 132, on right: 73 91
cond (101)
    on left: 133 134 135 136, on right: 97
whiledo (102)
    on left: 137 138, on right: 98
dowhile (103)
    on left: 139 140, on right: 99


State 0

    0 $accept: . programa $end

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_STATIC      shift, and go to state 6
    TK_IDENTIFICADOR  shift, and go to state 7

    $default  reduce using rule 2 (input)

    programa          go to state 8
    input             go to state 9
    global_line       go to state 10
    line              go to state 11
    global_statement  go to state 12
    statement_array   go to state 13
    statement         go to state 14
    type              go to state 15
    function          go to state 16
    func_head         go to state 17


State 1

   43 type: TK_PR_INT .

    $default  reduce using rule 43 (type)


State 2

   44 type: TK_PR_FLOAT .

    $default  reduce using rule 44 (type)


State 3

   45 type: TK_PR_BOOL .

    $default  reduce using rule 45 (type)


State 4

   46 type: TK_PR_CHAR .

    $default  reduce using rule 46 (type)


State 5

   47 type: TK_PR_STRING .

    $default  reduce using rule 47 (type)


State 6

   14 statement_array: TK_PR_STATIC . type TK_IDENTIFICADOR array_int
   16 statement: TK_PR_STATIC . type TK_IDENTIFICADOR
   18          | TK_PR_STATIC . TK_IDENTIFICADOR
  102 func_head: TK_PR_STATIC . type TK_IDENTIFICADOR func_head_params

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_IDENTIFICADOR  shift, and go to state 18

    type  go to state 19


State 7

   19 statement: TK_IDENTIFICADOR .
  105 func_head: TK_IDENTIFICADOR . func_head_params

    TK_CE_PAR_OPEN   shift, and go to state 20
    TK_CE_PAR_CLOSE  shift, and go to state 21

    $default  reduce using rule 19 (statement)

    func_head_params  go to state 22


State 8

    0 $accept: programa . $end

    $end  shift, and go to state 23


State 9

    1 programa: input . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 24


State 10

    4 input: global_line . input

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_STATIC      shift, and go to state 6
    TK_IDENTIFICADOR  shift, and go to state 7

    $default  reduce using rule 2 (input)

    input             go to state 25
    global_line       go to state 10
    line              go to state 11
    global_statement  go to state 12
    statement_array   go to state 13
    statement         go to state 14
    type              go to state 15
    function          go to state 16
    func_head         go to state 17


State 11

    3 input: line . input

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_STATIC      shift, and go to state 6
    TK_IDENTIFICADOR  shift, and go to state 7

    $default  reduce using rule 2 (input)

    input             go to state 26
    global_line       go to state 10
    line              go to state 11
    global_statement  go to state 12
    statement_array   go to state 13
    statement         go to state 14
    type              go to state 15
    function          go to state 16
    func_head         go to state 17


State 12

    5 global_line: global_statement .

    $default  reduce using rule 5 (global_line)


State 13

    8 global_statement: statement_array . endline

    TK_CE_SEMICOLON  shift, and go to state 27

    endline  go to state 28


State 14

    9 global_statement: statement . endline
   10                 | statement .
   11                 | statement . array_int

    TK_CE_SEMICOLON  shift, and go to state 27
    TK_CE_BRA_OPEN   shift, and go to state 29

    $default  reduce using rule 10 (global_statement)

    endline    go to state 30
    array_int  go to state 31


State 15

   15 statement_array: type . TK_IDENTIFICADOR array_int
   17 statement: type . TK_IDENTIFICADOR
  103 func_head: type . TK_IDENTIFICADOR func_head_params
  104          | type . func_head_params

    TK_CE_PAR_OPEN    shift, and go to state 20
    TK_CE_PAR_CLOSE   shift, and go to state 21
    TK_IDENTIFICADOR  shift, and go to state 32

    func_head_params  go to state 33


State 16

    6 line: function .

    $default  reduce using rule 6 (line)


State 17

  101 function: func_head . init_scope $@1 command close_scope

    TK_CE_BRA_CURL_OPEN  shift, and go to state 34

    init_scope  go to state 35


State 18

   18 statement: TK_PR_STATIC TK_IDENTIFICADOR .

    $default  reduce using rule 18 (statement)


State 19

   14 statement_array: TK_PR_STATIC type . TK_IDENTIFICADOR array_int
   16 statement: TK_PR_STATIC type . TK_IDENTIFICADOR
  102 func_head: TK_PR_STATIC type . TK_IDENTIFICADOR func_head_params

    TK_IDENTIFICADOR  shift, and go to state 36


State 20

  106 func_head_params: TK_CE_PAR_OPEN . TK_CE_PAR_CLOSE
  107                 | TK_CE_PAR_OPEN . func_params TK_CE_PAR_CLOSE
  109                 | TK_CE_PAR_OPEN .

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_CONST       shift, and go to state 37
    TK_CE_PAR_CLOSE   shift, and go to state 38
    TK_IDENTIFICADOR  shift, and go to state 39

    $default  reduce using rule 109 (func_head_params)

    type         go to state 40
    func_params  go to state 41


State 21

  108 func_head_params: TK_CE_PAR_CLOSE .

    $default  reduce using rule 108 (func_head_params)


State 22

  105 func_head: TK_IDENTIFICADOR func_head_params .

    $default  reduce using rule 105 (func_head)


State 23

    0 $accept: programa $end .

    $default  accept


State 24

    1 programa: input TOKEN_EOF .

    $default  reduce using rule 1 (programa)


State 25

    4 input: global_line input .

    $default  reduce using rule 4 (input)


State 26

    3 input: line input .

    $default  reduce using rule 3 (input)


State 27

    7 endline: TK_CE_SEMICOLON .

    $default  reduce using rule 7 (endline)


State 28

    8 global_statement: statement_array endline .

    $default  reduce using rule 8 (global_statement)


State 29

   13 array_int: TK_CE_BRA_OPEN . lst_int TK_CE_BRA_CLOSE

    TK_LIT_INT  shift, and go to state 42

    lst_int  go to state 43


State 30

    9 global_statement: statement endline .

    $default  reduce using rule 9 (global_statement)


State 31

   11 global_statement: statement array_int .

    $default  reduce using rule 11 (global_statement)


State 32

   15 statement_array: type TK_IDENTIFICADOR . array_int
   17 statement: type TK_IDENTIFICADOR .
  103 func_head: type TK_IDENTIFICADOR . func_head_params

    TK_CE_PAR_OPEN   shift, and go to state 20
    TK_CE_PAR_CLOSE  shift, and go to state 21
    TK_CE_BRA_OPEN   shift, and go to state 29

    $default  reduce using rule 17 (statement)

    array_int         go to state 44
    func_head_params  go to state 45


State 33

  104 func_head: type func_head_params .

    $default  reduce using rule 104 (func_head)


State 34

   82 init_scope: TK_CE_BRA_CURL_OPEN .

    $default  reduce using rule 82 (init_scope)


State 35

  101 function: func_head init_scope . $@1 command close_scope

    $default  reduce using rule 100 ($@1)

    $@1  go to state 46


State 36

   14 statement_array: TK_PR_STATIC type TK_IDENTIFICADOR . array_int
   16 statement: TK_PR_STATIC type TK_IDENTIFICADOR .
  102 func_head: TK_PR_STATIC type TK_IDENTIFICADOR . func_head_params

    TK_CE_PAR_OPEN   shift, and go to state 20
    TK_CE_PAR_CLOSE  shift, and go to state 21
    TK_CE_BRA_OPEN   shift, and go to state 29

    $default  reduce using rule 16 (statement)

    array_int         go to state 47
    func_head_params  go to state 48


State 37

  111 func_params: TK_PR_CONST . type TK_IDENTIFICADOR TK_CE_COMMA func_params
  113            | TK_PR_CONST . type TK_IDENTIFICADOR
  115            | TK_PR_CONST . TK_IDENTIFICADOR TK_CE_COMMA func_params
  117            | TK_PR_CONST . TK_IDENTIFICADOR

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_IDENTIFICADOR  shift, and go to state 49

    type  go to state 50


State 38

  106 func_head_params: TK_CE_PAR_OPEN TK_CE_PAR_CLOSE .

    $default  reduce using rule 106 (func_head_params)


State 39

  114 func_params: TK_IDENTIFICADOR . TK_CE_COMMA func_params
  116            | TK_IDENTIFICADOR .

    TK_CE_COMMA  shift, and go to state 51

    $default  reduce using rule 116 (func_params)


State 40

  110 func_params: type . TK_IDENTIFICADOR TK_CE_COMMA func_params
  112            | type . TK_IDENTIFICADOR
  118            | type .
  119            | type . TK_CE_COMMA func_params

    TK_CE_COMMA       shift, and go to state 52
    TK_IDENTIFICADOR  shift, and go to state 53

    $default  reduce using rule 118 (func_params)


State 41

  107 func_head_params: TK_CE_PAR_OPEN func_params . TK_CE_PAR_CLOSE

    TK_CE_PAR_CLOSE  shift, and go to state 54


State 42

   79 lst_int: TK_LIT_INT . TK_CE_COMMA lst_int
   80        | TK_LIT_INT .

    TK_CE_COMMA  shift, and go to state 55

    $default  reduce using rule 80 (lst_int)


State 43

   13 array_int: TK_CE_BRA_OPEN lst_int . TK_CE_BRA_CLOSE

    TK_CE_BRA_CLOSE  shift, and go to state 56


State 44

   15 statement_array: type TK_IDENTIFICADOR array_int .

    $default  reduce using rule 15 (statement_array)


State 45

  103 func_head: type TK_IDENTIFICADOR func_head_params .

    $default  reduce using rule 103 (func_head)


State 46

  101 function: func_head init_scope $@1 . command close_scope

    TK_PR_INT            shift, and go to state 1
    TK_PR_FLOAT          shift, and go to state 2
    TK_PR_BOOL           shift, and go to state 3
    TK_PR_CHAR           shift, and go to state 4
    TK_PR_STRING         shift, and go to state 5
    TK_PR_IF             shift, and go to state 57
    TK_PR_WHILE          shift, and go to state 58
    TK_PR_DO             shift, and go to state 59
    TK_PR_INPUT          shift, and go to state 60
    TK_PR_OUTPUT         shift, and go to state 61
    TK_PR_RETURN         shift, and go to state 62
    TK_PR_STATIC         shift, and go to state 63
    TK_PR_CONST          shift, and go to state 64
    TK_CE_SEMICOLON      shift, and go to state 27
    TK_CE_BRA_CURL_OPEN  shift, and go to state 34
    TK_IDENTIFICADOR     shift, and go to state 65

    $default  reduce using rule 84 (command)

    endline          go to state 66
    statement        go to state 67
    local_statement  go to state 68
    const_statement  go to state 69
    type             go to state 70
    command_block    go to state 71
    init_scope       go to state 72
    command          go to state 73
    command2         go to state 74
    single_command   go to state 75
    flow_command     go to state 76
    assignment       go to state 77
    in               go to state 78
    out              go to state 79
    ret              go to state 80
    func_call        go to state 81
    cond             go to state 82
    whiledo          go to state 83
    dowhile          go to state 84


State 47

   14 statement_array: TK_PR_STATIC type TK_IDENTIFICADOR array_int .

    $default  reduce using rule 14 (statement_array)


State 48

  102 func_head: TK_PR_STATIC type TK_IDENTIFICADOR func_head_params .

    $default  reduce using rule 102 (func_head)


State 49

  115 func_params: TK_PR_CONST TK_IDENTIFICADOR . TK_CE_COMMA func_params
  117            | TK_PR_CONST TK_IDENTIFICADOR .

    TK_CE_COMMA  shift, and go to state 85

    $default  reduce using rule 117 (func_params)


State 50

  111 func_params: TK_PR_CONST type . TK_IDENTIFICADOR TK_CE_COMMA func_params
  113            | TK_PR_CONST type . TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 86


State 51

  114 func_params: TK_IDENTIFICADOR TK_CE_COMMA . func_params

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_CONST       shift, and go to state 37
    TK_IDENTIFICADOR  shift, and go to state 39

    type         go to state 40
    func_params  go to state 87


State 52

  119 func_params: type TK_CE_COMMA . func_params

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_CONST       shift, and go to state 37
    TK_IDENTIFICADOR  shift, and go to state 39

    type         go to state 40
    func_params  go to state 88


State 53

  110 func_params: type TK_IDENTIFICADOR . TK_CE_COMMA func_params
  112            | type TK_IDENTIFICADOR .

    TK_CE_COMMA  shift, and go to state 89

    $default  reduce using rule 112 (func_params)


State 54

  107 func_head_params: TK_CE_PAR_OPEN func_params TK_CE_PAR_CLOSE .

    $default  reduce using rule 107 (func_head_params)


State 55

   79 lst_int: TK_LIT_INT TK_CE_COMMA . lst_int

    TK_LIT_INT  shift, and go to state 42

    lst_int  go to state 90


State 56

   13 array_int: TK_CE_BRA_OPEN lst_int TK_CE_BRA_CLOSE .

    $default  reduce using rule 13 (array_int)


State 57

  133 cond: TK_PR_IF . TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_THEN command2
  134     | TK_PR_IF . TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_THEN command2 TK_PR_ELSE command2
  135     | TK_PR_IF . TK_CE_PAR_OPEN TK_CE_PAR_CLOSE TK_PR_THEN command2
  136     | TK_PR_IF . TK_CE_PAR_OPEN exp TK_PR_THEN command2

    TK_CE_PAR_OPEN  shift, and go to state 91


State 58

  137 whiledo: TK_PR_WHILE . TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_DO command2
  138        | TK_PR_WHILE . TK_CE_PAR_OPEN TK_CE_PAR_CLOSE TK_PR_DO command2

    TK_CE_PAR_OPEN  shift, and go to state 92


State 59

  139 dowhile: TK_PR_DO . command2 TK_PR_WHILE exp
  140        | TK_PR_DO . command2 TK_PR_WHILE

    TK_PR_INT            shift, and go to state 1
    TK_PR_FLOAT          shift, and go to state 2
    TK_PR_BOOL           shift, and go to state 3
    TK_PR_CHAR           shift, and go to state 4
    TK_PR_STRING         shift, and go to state 5
    TK_PR_IF             shift, and go to state 57
    TK_PR_WHILE          shift, and go to state 58
    TK_PR_DO             shift, and go to state 59
    TK_PR_INPUT          shift, and go to state 60
    TK_PR_OUTPUT         shift, and go to state 61
    TK_PR_RETURN         shift, and go to state 62
    TK_PR_STATIC         shift, and go to state 63
    TK_PR_CONST          shift, and go to state 64
    TK_CE_SEMICOLON      shift, and go to state 27
    TK_CE_BRA_CURL_OPEN  shift, and go to state 34
    TK_IDENTIFICADOR     shift, and go to state 65

    endline          go to state 66
    statement        go to state 67
    local_statement  go to state 68
    const_statement  go to state 69
    type             go to state 70
    command_block    go to state 71
    init_scope       go to state 72
    command2         go to state 93
    single_command   go to state 75
    flow_command     go to state 76
    assignment       go to state 77
    in               go to state 78
    out              go to state 79
    ret              go to state 80
    func_call        go to state 81
    cond             go to state 82
    whiledo          go to state 83
    dowhile          go to state 84


State 60

  124 in: TK_PR_INPUT . exp TK_CE_EG exp
  125   | TK_PR_INPUT . TK_CE_EG exp
  126   | TK_PR_INPUT . exp TK_CE_EG

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_CE_EG          shift, and go to state 97
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 104
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp          go to state 107
    val_exp      go to state 108
    exp_bool     go to state 109
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 61

  127 out: TK_PR_OUTPUT . lst_exp
  128    | TK_PR_OUTPUT .

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 104
    TK_IDENTIFICADOR  shift, and go to state 105

    $default  reduce using rule 128 (out)

    op_literal   go to state 106
    exp          go to state 118
    val_exp      go to state 108
    exp_bool     go to state 109
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    lst_exp      go to state 119
    func_call    go to state 117


State 62

  129 ret: TK_PR_RETURN . exp
  130    | TK_PR_RETURN .

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 104
    TK_IDENTIFICADOR  shift, and go to state 105

    $default  reduce using rule 130 (ret)

    op_literal   go to state 106
    exp          go to state 120
    val_exp      go to state 108
    exp_bool     go to state 109
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 63

   16 statement: TK_PR_STATIC . type TK_IDENTIFICADOR
   18          | TK_PR_STATIC . TK_IDENTIFICADOR
   28 const_statement: TK_PR_STATIC . TK_PR_CONST type TK_IDENTIFICADOR
   29                | TK_PR_STATIC . TK_PR_CONST TK_IDENTIFICADOR
   30                | TK_PR_STATIC . TK_PR_CONST type

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_CONST       shift, and go to state 121
    TK_IDENTIFICADOR  shift, and go to state 18

    type  go to state 122


State 64

   31 const_statement: TK_PR_CONST . type TK_IDENTIFICADOR
   32                | TK_PR_CONST . TK_IDENTIFICADOR
   33                | TK_PR_CONST . type

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_IDENTIFICADOR  shift, and go to state 123

    type  go to state 124


State 65

   19 statement: TK_IDENTIFICADOR .
  120 assignment: TK_IDENTIFICADOR . TK_CE_EQUAL exp
  121           | TK_IDENTIFICADOR . array TK_CE_EQUAL exp
  122           | TK_IDENTIFICADOR . TK_CE_EQUAL
  123           | TK_IDENTIFICADOR . array TK_CE_EQUAL
  131 func_call: TK_IDENTIFICADOR . TK_CE_PAR_OPEN TK_CE_PAR_CLOSE
  132          | TK_IDENTIFICADOR . TK_CE_PAR_OPEN lst_exp TK_CE_PAR_CLOSE

    TK_CE_PAR_OPEN  shift, and go to state 125
    TK_CE_BRA_OPEN  shift, and go to state 126
    TK_CE_EQUAL     shift, and go to state 127

    $default  reduce using rule 19 (statement)

    array  go to state 128


State 66

   90 command2: endline .

    $default  reduce using rule 90 (command2)


State 67

   22 local_statement: statement . TK_OC_LE TK_IDENTIFICADOR
   23                | statement . TK_OC_LE literal
   25                | statement .
   27                | statement . TK_OC_LE

    TK_OC_LE  shift, and go to state 129

    $default  reduce using rule 25 (local_statement)


State 68

   92 single_command: local_statement .

    $default  reduce using rule 92 (single_command)


State 69

   20 local_statement: const_statement . TK_OC_LE TK_IDENTIFICADOR
   21                | const_statement . TK_OC_LE literal
   24                | const_statement .
   26                | const_statement . TK_OC_LE

    TK_OC_LE  shift, and go to state 130

    $default  reduce using rule 24 (local_statement)


State 70

   17 statement: type . TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 131


State 71

   88 command2: command_block .

    $default  reduce using rule 88 (command2)


State 72

   81 command_block: init_scope . command close_scope

    TK_PR_INT            shift, and go to state 1
    TK_PR_FLOAT          shift, and go to state 2
    TK_PR_BOOL           shift, and go to state 3
    TK_PR_CHAR           shift, and go to state 4
    TK_PR_STRING         shift, and go to state 5
    TK_PR_IF             shift, and go to state 57
    TK_PR_WHILE          shift, and go to state 58
    TK_PR_DO             shift, and go to state 59
    TK_PR_INPUT          shift, and go to state 60
    TK_PR_OUTPUT         shift, and go to state 61
    TK_PR_RETURN         shift, and go to state 62
    TK_PR_STATIC         shift, and go to state 63
    TK_PR_CONST          shift, and go to state 64
    TK_CE_SEMICOLON      shift, and go to state 27
    TK_CE_BRA_CURL_OPEN  shift, and go to state 34
    TK_IDENTIFICADOR     shift, and go to state 65

    $default  reduce using rule 84 (command)

    endline          go to state 66
    statement        go to state 67
    local_statement  go to state 68
    const_statement  go to state 69
    type             go to state 70
    command_block    go to state 71
    init_scope       go to state 72
    command          go to state 132
    command2         go to state 74
    single_command   go to state 75
    flow_command     go to state 76
    assignment       go to state 77
    in               go to state 78
    out              go to state 79
    ret              go to state 80
    func_call        go to state 81
    cond             go to state 82
    whiledo          go to state 83
    dowhile          go to state 84


State 73

  101 function: func_head init_scope $@1 command . close_scope

    TK_CE_BRA_CURL_CLOSE  shift, and go to state 133

    close_scope  go to state 134


State 74

   85 command: command2 . endline command
   86        | command2 .

    TK_CE_SEMICOLON  shift, and go to state 27

    $default  reduce using rule 86 (command)

    endline  go to state 135


State 75

   87 command2: single_command .

    $default  reduce using rule 87 (command2)


State 76

   89 command2: flow_command .

    $default  reduce using rule 89 (command2)


State 77

   96 single_command: assignment .

    $default  reduce using rule 96 (single_command)


State 78

   93 single_command: in .

    $default  reduce using rule 93 (single_command)


State 79

   94 single_command: out .

    $default  reduce using rule 94 (single_command)


State 80

   95 single_command: ret .

    $default  reduce using rule 95 (single_command)


State 81

   91 single_command: func_call .

    $default  reduce using rule 91 (single_command)


State 82

   97 flow_command: cond .

    $default  reduce using rule 97 (flow_command)


State 83

   98 flow_command: whiledo .

    $default  reduce using rule 98 (flow_command)


State 84

   99 flow_command: dowhile .

    $default  reduce using rule 99 (flow_command)


State 85

  115 func_params: TK_PR_CONST TK_IDENTIFICADOR TK_CE_COMMA . func_params

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_CONST       shift, and go to state 37
    TK_IDENTIFICADOR  shift, and go to state 39

    type         go to state 40
    func_params  go to state 136


State 86

  111 func_params: TK_PR_CONST type TK_IDENTIFICADOR . TK_CE_COMMA func_params
  113            | TK_PR_CONST type TK_IDENTIFICADOR .

    TK_CE_COMMA  shift, and go to state 137

    $default  reduce using rule 113 (func_params)


State 87

  114 func_params: TK_IDENTIFICADOR TK_CE_COMMA func_params .

    $default  reduce using rule 114 (func_params)


State 88

  119 func_params: type TK_CE_COMMA func_params .

    $default  reduce using rule 119 (func_params)


State 89

  110 func_params: type TK_IDENTIFICADOR TK_CE_COMMA . func_params

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_CONST       shift, and go to state 37
    TK_IDENTIFICADOR  shift, and go to state 39

    type         go to state 40
    func_params  go to state 138


State 90

   79 lst_int: TK_LIT_INT TK_CE_COMMA lst_int .

    $default  reduce using rule 79 (lst_int)


State 91

  133 cond: TK_PR_IF TK_CE_PAR_OPEN . exp TK_CE_PAR_CLOSE TK_PR_THEN command2
  134     | TK_PR_IF TK_CE_PAR_OPEN . exp TK_CE_PAR_CLOSE TK_PR_THEN command2 TK_PR_ELSE command2
  135     | TK_PR_IF TK_CE_PAR_OPEN . TK_CE_PAR_CLOSE TK_PR_THEN command2
  136     | TK_PR_IF TK_CE_PAR_OPEN . exp TK_PR_THEN command2

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PAR_CLOSE   shift, and go to state 139
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 104
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp          go to state 140
    val_exp      go to state 108
    exp_bool     go to state 109
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 92

  137 whiledo: TK_PR_WHILE TK_CE_PAR_OPEN . exp TK_CE_PAR_CLOSE TK_PR_DO command2
  138        | TK_PR_WHILE TK_CE_PAR_OPEN . TK_CE_PAR_CLOSE TK_PR_DO command2

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PAR_CLOSE   shift, and go to state 141
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 104
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp          go to state 142
    val_exp      go to state 108
    exp_bool     go to state 109
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 93

  139 dowhile: TK_PR_DO command2 . TK_PR_WHILE exp
  140        | TK_PR_DO command2 . TK_PR_WHILE

    TK_PR_WHILE  shift, and go to state 143


State 94

   68 exp_art_par: TK_CE_PAR_OPEN . exp_bool TK_CE_PAR_CLOSE

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp_bool     go to state 144
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 95

   41 op_literal: TK_CE_PLUS . TK_LIT_INT
   42           | TK_CE_PLUS . TK_LIT_FLOAT

    TK_LIT_INT    shift, and go to state 145
    TK_LIT_FLOAT  shift, and go to state 146


State 96

   70 exp_neg: TK_CE_MINUS . exp_end

    TK_CE_PLUS        shift, and go to state 95
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal  go to state 106
    exp_end     go to state 147
    func_call   go to state 117


State 97

  125 in: TK_PR_INPUT TK_CE_EG . exp

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 104
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp          go to state 148
    val_exp      go to state 108
    exp_bool     go to state 109
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 98

   71 exp_neg: TK_OC_NEG . exp_end

    TK_CE_PLUS        shift, and go to state 95
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal  go to state 106
    exp_end     go to state 149
    func_call   go to state 117


State 99

   36 op_literal: TK_LIT_INT .

    $default  reduce using rule 36 (op_literal)


State 100

   37 op_literal: TK_LIT_FLOAT .

    $default  reduce using rule 37 (op_literal)


State 101

   38 op_literal: TK_LIT_FALSE .

    $default  reduce using rule 38 (op_literal)


State 102

   39 op_literal: TK_LIT_TRUE .

    $default  reduce using rule 39 (op_literal)


State 103

   40 op_literal: TK_LIT_CHAR .

    $default  reduce using rule 40 (op_literal)


State 104

   49 exp: TK_LIT_STRING .

    $default  reduce using rule 49 (exp)


State 105

   75 exp_end: TK_IDENTIFICADOR .
   76        | TK_IDENTIFICADOR . array
  131 func_call: TK_IDENTIFICADOR . TK_CE_PAR_OPEN TK_CE_PAR_CLOSE
  132          | TK_IDENTIFICADOR . TK_CE_PAR_OPEN lst_exp TK_CE_PAR_CLOSE

    TK_CE_PAR_OPEN  shift, and go to state 125
    TK_CE_BRA_OPEN  shift, and go to state 126

    $default  reduce using rule 75 (exp_end)

    array  go to state 150


State 106

   74 exp_end: op_literal .

    $default  reduce using rule 74 (exp_end)


State 107

  124 in: TK_PR_INPUT exp . TK_CE_EG exp
  126   | TK_PR_INPUT exp . TK_CE_EG

    TK_CE_EG  shift, and go to state 151


State 108

   48 exp: val_exp .

    $default  reduce using rule 48 (exp)


State 109

   50 val_exp: exp_bool .
   51 exp_bool: exp_bool . TK_OC_LT exp_bool_ou
   52         | exp_bool . TK_OC_GT exp_bool_ou
   53         | exp_bool . TK_OC_LE exp_bool_ou
   54         | exp_bool . TK_OC_GE exp_bool_ou
   55         | exp_bool . TK_OC_EQ exp_bool_ou
   56         | exp_bool . TK_OC_NE exp_bool_ou

    TK_OC_LE  shift, and go to state 152
    TK_OC_GE  shift, and go to state 153
    TK_OC_EQ  shift, and go to state 154
    TK_OC_NE  shift, and go to state 155
    TK_OC_GT  shift, and go to state 156
    TK_OC_LT  shift, and go to state 157

    $default  reduce using rule 50 (val_exp)


State 110

   57 exp_bool: exp_bool_ou .
   58 exp_bool_ou: exp_bool_ou . TK_OC_OR exp_bool_e

    TK_OC_OR  shift, and go to state 158

    $default  reduce using rule 57 (exp_bool)


State 111

   59 exp_bool_ou: exp_bool_e .
   60 exp_bool_e: exp_bool_e . TK_OC_AND exp_art

    TK_OC_AND  shift, and go to state 159

    $default  reduce using rule 59 (exp_bool_ou)


State 112

   61 exp_bool_e: exp_art .
   62 exp_art: exp_art . TK_CE_PLUS exp_art_t
   63        | exp_art . TK_CE_MINUS exp_art_t

    TK_CE_PLUS   shift, and go to state 160
    TK_CE_MINUS  shift, and go to state 161

    $default  reduce using rule 61 (exp_bool_e)


State 113

   64 exp_art: exp_art_t .
   65 exp_art_t: exp_art_t . TK_CE_MUL exp_art_par
   66          | exp_art_t . TK_CE_DIV exp_art_par

    TK_CE_MUL  shift, and go to state 162
    TK_CE_DIV  shift, and go to state 163

    $default  reduce using rule 64 (exp_art)


State 114

   67 exp_art_t: exp_art_par .

    $default  reduce using rule 67 (exp_art_t)


State 115

   69 exp_art_par: exp_neg .

    $default  reduce using rule 69 (exp_art_par)


State 116

   72 exp_neg: exp_end .

    $default  reduce using rule 72 (exp_neg)


State 117

   73 exp_end: func_call .

    $default  reduce using rule 73 (exp_end)


State 118

   77 lst_exp: exp . TK_CE_COMMA lst_exp
   78        | exp .

    TK_CE_COMMA  shift, and go to state 164

    $default  reduce using rule 78 (lst_exp)


State 119

  127 out: TK_PR_OUTPUT lst_exp .

    $default  reduce using rule 127 (out)


State 120

  129 ret: TK_PR_RETURN exp .

    $default  reduce using rule 129 (ret)


State 121

   28 const_statement: TK_PR_STATIC TK_PR_CONST . type TK_IDENTIFICADOR
   29                | TK_PR_STATIC TK_PR_CONST . TK_IDENTIFICADOR
   30                | TK_PR_STATIC TK_PR_CONST . type

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_IDENTIFICADOR  shift, and go to state 165

    type  go to state 166


State 122

   16 statement: TK_PR_STATIC type . TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 167


State 123

   32 const_statement: TK_PR_CONST TK_IDENTIFICADOR .

    $default  reduce using rule 32 (const_statement)


State 124

   31 const_statement: TK_PR_CONST type . TK_IDENTIFICADOR
   33                | TK_PR_CONST type .

    TK_IDENTIFICADOR  shift, and go to state 168

    $default  reduce using rule 33 (const_statement)


State 125

  131 func_call: TK_IDENTIFICADOR TK_CE_PAR_OPEN . TK_CE_PAR_CLOSE
  132          | TK_IDENTIFICADOR TK_CE_PAR_OPEN . lst_exp TK_CE_PAR_CLOSE

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PAR_CLOSE   shift, and go to state 169
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 104
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp          go to state 118
    val_exp      go to state 108
    exp_bool     go to state 109
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    lst_exp      go to state 170
    func_call    go to state 117


State 126

   12 array: TK_CE_BRA_OPEN . lst_exp TK_CE_BRA_CLOSE

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 104
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp          go to state 118
    val_exp      go to state 108
    exp_bool     go to state 109
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    lst_exp      go to state 171
    func_call    go to state 117


State 127

  120 assignment: TK_IDENTIFICADOR TK_CE_EQUAL . exp
  122           | TK_IDENTIFICADOR TK_CE_EQUAL .

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 104
    TK_IDENTIFICADOR  shift, and go to state 105

    $default  reduce using rule 122 (assignment)

    op_literal   go to state 106
    exp          go to state 172
    val_exp      go to state 108
    exp_bool     go to state 109
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 128

  121 assignment: TK_IDENTIFICADOR array . TK_CE_EQUAL exp
  123           | TK_IDENTIFICADOR array . TK_CE_EQUAL

    TK_CE_EQUAL  shift, and go to state 173


State 129

   22 local_statement: statement TK_OC_LE . TK_IDENTIFICADOR
   23                | statement TK_OC_LE . literal
   27                | statement TK_OC_LE .

    TK_CE_PLUS        shift, and go to state 95
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 174
    TK_IDENTIFICADOR  shift, and go to state 175

    $default  reduce using rule 27 (local_statement)

    literal     go to state 176
    op_literal  go to state 177


State 130

   20 local_statement: const_statement TK_OC_LE . TK_IDENTIFICADOR
   21                | const_statement TK_OC_LE . literal
   26                | const_statement TK_OC_LE .

    TK_CE_PLUS        shift, and go to state 95
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 174
    TK_IDENTIFICADOR  shift, and go to state 178

    $default  reduce using rule 26 (local_statement)

    literal     go to state 179
    op_literal  go to state 177


State 131

   17 statement: type TK_IDENTIFICADOR .

    $default  reduce using rule 17 (statement)


State 132

   81 command_block: init_scope command . close_scope

    TK_CE_BRA_CURL_CLOSE  shift, and go to state 133

    close_scope  go to state 180


State 133

   83 close_scope: TK_CE_BRA_CURL_CLOSE .

    $default  reduce using rule 83 (close_scope)


State 134

  101 function: func_head init_scope $@1 command close_scope .

    $default  reduce using rule 101 (function)


State 135

   85 command: command2 endline . command

    TK_PR_INT            shift, and go to state 1
    TK_PR_FLOAT          shift, and go to state 2
    TK_PR_BOOL           shift, and go to state 3
    TK_PR_CHAR           shift, and go to state 4
    TK_PR_STRING         shift, and go to state 5
    TK_PR_IF             shift, and go to state 57
    TK_PR_WHILE          shift, and go to state 58
    TK_PR_DO             shift, and go to state 59
    TK_PR_INPUT          shift, and go to state 60
    TK_PR_OUTPUT         shift, and go to state 61
    TK_PR_RETURN         shift, and go to state 62
    TK_PR_STATIC         shift, and go to state 63
    TK_PR_CONST          shift, and go to state 64
    TK_CE_SEMICOLON      shift, and go to state 27
    TK_CE_BRA_CURL_OPEN  shift, and go to state 34
    TK_IDENTIFICADOR     shift, and go to state 65

    $default  reduce using rule 84 (command)

    endline          go to state 66
    statement        go to state 67
    local_statement  go to state 68
    const_statement  go to state 69
    type             go to state 70
    command_block    go to state 71
    init_scope       go to state 72
    command          go to state 181
    command2         go to state 74
    single_command   go to state 75
    flow_command     go to state 76
    assignment       go to state 77
    in               go to state 78
    out              go to state 79
    ret              go to state 80
    func_call        go to state 81
    cond             go to state 82
    whiledo          go to state 83
    dowhile          go to state 84


State 136

  115 func_params: TK_PR_CONST TK_IDENTIFICADOR TK_CE_COMMA func_params .

    $default  reduce using rule 115 (func_params)


State 137

  111 func_params: TK_PR_CONST type TK_IDENTIFICADOR TK_CE_COMMA . func_params

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_CONST       shift, and go to state 37
    TK_IDENTIFICADOR  shift, and go to state 39

    type         go to state 40
    func_params  go to state 182


State 138

  110 func_params: type TK_IDENTIFICADOR TK_CE_COMMA func_params .

    $default  reduce using rule 110 (func_params)


State 139

  135 cond: TK_PR_IF TK_CE_PAR_OPEN TK_CE_PAR_CLOSE . TK_PR_THEN command2

    TK_PR_THEN  shift, and go to state 183


State 140

  133 cond: TK_PR_IF TK_CE_PAR_OPEN exp . TK_CE_PAR_CLOSE TK_PR_THEN command2
  134     | TK_PR_IF TK_CE_PAR_OPEN exp . TK_CE_PAR_CLOSE TK_PR_THEN command2 TK_PR_ELSE command2
  136     | TK_PR_IF TK_CE_PAR_OPEN exp . TK_PR_THEN command2

    TK_PR_THEN       shift, and go to state 184
    TK_CE_PAR_CLOSE  shift, and go to state 185


State 141

  138 whiledo: TK_PR_WHILE TK_CE_PAR_OPEN TK_CE_PAR_CLOSE . TK_PR_DO command2

    TK_PR_DO  shift, and go to state 186


State 142

  137 whiledo: TK_PR_WHILE TK_CE_PAR_OPEN exp . TK_CE_PAR_CLOSE TK_PR_DO command2

    TK_CE_PAR_CLOSE  shift, and go to state 187


State 143

  139 dowhile: TK_PR_DO command2 TK_PR_WHILE . exp
  140        | TK_PR_DO command2 TK_PR_WHILE .

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 104
    TK_IDENTIFICADOR  shift, and go to state 105

    $default  reduce using rule 140 (dowhile)

    op_literal   go to state 106
    exp          go to state 188
    val_exp      go to state 108
    exp_bool     go to state 109
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 144

   51 exp_bool: exp_bool . TK_OC_LT exp_bool_ou
   52         | exp_bool . TK_OC_GT exp_bool_ou
   53         | exp_bool . TK_OC_LE exp_bool_ou
   54         | exp_bool . TK_OC_GE exp_bool_ou
   55         | exp_bool . TK_OC_EQ exp_bool_ou
   56         | exp_bool . TK_OC_NE exp_bool_ou
   68 exp_art_par: TK_CE_PAR_OPEN exp_bool . TK_CE_PAR_CLOSE

    TK_CE_PAR_CLOSE  shift, and go to state 189
    TK_OC_LE         shift, and go to state 152
    TK_OC_GE         shift, and go to state 153
    TK_OC_EQ         shift, and go to state 154
    TK_OC_NE         shift, and go to state 155
    TK_OC_GT         shift, and go to state 156
    TK_OC_LT         shift, and go to state 157


State 145

   41 op_literal: TK_CE_PLUS TK_LIT_INT .

    $default  reduce using rule 41 (op_literal)


State 146

   42 op_literal: TK_CE_PLUS TK_LIT_FLOAT .

    $default  reduce using rule 42 (op_literal)


State 147

   70 exp_neg: TK_CE_MINUS exp_end .

    $default  reduce using rule 70 (exp_neg)


State 148

  125 in: TK_PR_INPUT TK_CE_EG exp .

    $default  reduce using rule 125 (in)


State 149

   71 exp_neg: TK_OC_NEG exp_end .

    $default  reduce using rule 71 (exp_neg)


State 150

   76 exp_end: TK_IDENTIFICADOR array .

    $default  reduce using rule 76 (exp_end)


State 151

  124 in: TK_PR_INPUT exp TK_CE_EG . exp
  126   | TK_PR_INPUT exp TK_CE_EG .

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 104
    TK_IDENTIFICADOR  shift, and go to state 105

    $default  reduce using rule 126 (in)

    op_literal   go to state 106
    exp          go to state 190
    val_exp      go to state 108
    exp_bool     go to state 109
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 152

   53 exp_bool: exp_bool TK_OC_LE . exp_bool_ou

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp_bool_ou  go to state 191
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 153

   54 exp_bool: exp_bool TK_OC_GE . exp_bool_ou

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp_bool_ou  go to state 192
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 154

   55 exp_bool: exp_bool TK_OC_EQ . exp_bool_ou

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp_bool_ou  go to state 193
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 155

   56 exp_bool: exp_bool TK_OC_NE . exp_bool_ou

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp_bool_ou  go to state 194
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 156

   52 exp_bool: exp_bool TK_OC_GT . exp_bool_ou

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp_bool_ou  go to state 195
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 157

   51 exp_bool: exp_bool TK_OC_LT . exp_bool_ou

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp_bool_ou  go to state 196
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 158

   58 exp_bool_ou: exp_bool_ou TK_OC_OR . exp_bool_e

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp_bool_e   go to state 197
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 159

   60 exp_bool_e: exp_bool_e TK_OC_AND . exp_art

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp_art      go to state 198
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 160

   62 exp_art: exp_art TK_CE_PLUS . exp_art_t

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp_art_t    go to state 199
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 161

   63 exp_art: exp_art TK_CE_MINUS . exp_art_t

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp_art_t    go to state 200
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 162

   65 exp_art_t: exp_art_t TK_CE_MUL . exp_art_par

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp_art_par  go to state 201
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 163

   66 exp_art_t: exp_art_t TK_CE_DIV . exp_art_par

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp_art_par  go to state 202
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 164

   77 lst_exp: exp TK_CE_COMMA . lst_exp

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 104
    TK_IDENTIFICADOR  shift, and go to state 105

    op_literal   go to state 106
    exp          go to state 118
    val_exp      go to state 108
    exp_bool     go to state 109
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    lst_exp      go to state 203
    func_call    go to state 117


State 165

   29 const_statement: TK_PR_STATIC TK_PR_CONST TK_IDENTIFICADOR .

    $default  reduce using rule 29 (const_statement)


State 166

   28 const_statement: TK_PR_STATIC TK_PR_CONST type . TK_IDENTIFICADOR
   30                | TK_PR_STATIC TK_PR_CONST type .

    TK_IDENTIFICADOR  shift, and go to state 204

    $default  reduce using rule 30 (const_statement)


State 167

   16 statement: TK_PR_STATIC type TK_IDENTIFICADOR .

    $default  reduce using rule 16 (statement)


State 168

   31 const_statement: TK_PR_CONST type TK_IDENTIFICADOR .

    $default  reduce using rule 31 (const_statement)


State 169

  131 func_call: TK_IDENTIFICADOR TK_CE_PAR_OPEN TK_CE_PAR_CLOSE .

    $default  reduce using rule 131 (func_call)


State 170

  132 func_call: TK_IDENTIFICADOR TK_CE_PAR_OPEN lst_exp . TK_CE_PAR_CLOSE

    TK_CE_PAR_CLOSE  shift, and go to state 205


State 171

   12 array: TK_CE_BRA_OPEN lst_exp . TK_CE_BRA_CLOSE

    TK_CE_BRA_CLOSE  shift, and go to state 206


State 172

  120 assignment: TK_IDENTIFICADOR TK_CE_EQUAL exp .

    $default  reduce using rule 120 (assignment)


State 173

  121 assignment: TK_IDENTIFICADOR array TK_CE_EQUAL . exp
  123           | TK_IDENTIFICADOR array TK_CE_EQUAL .

    TK_CE_PAR_OPEN    shift, and go to state 94
    TK_CE_PLUS        shift, and go to state 95
    TK_CE_MINUS       shift, and go to state 96
    TK_OC_NEG         shift, and go to state 98
    TK_LIT_INT        shift, and go to state 99
    TK_LIT_FLOAT      shift, and go to state 100
    TK_LIT_FALSE      shift, and go to state 101
    TK_LIT_TRUE       shift, and go to state 102
    TK_LIT_CHAR       shift, and go to state 103
    TK_LIT_STRING     shift, and go to state 104
    TK_IDENTIFICADOR  shift, and go to state 105

    $default  reduce using rule 123 (assignment)

    op_literal   go to state 106
    exp          go to state 207
    val_exp      go to state 108
    exp_bool     go to state 109
    exp_bool_ou  go to state 110
    exp_bool_e   go to state 111
    exp_art      go to state 112
    exp_art_t    go to state 113
    exp_art_par  go to state 114
    exp_neg      go to state 115
    exp_end      go to state 116
    func_call    go to state 117


State 174

   35 literal: TK_LIT_STRING .

    $default  reduce using rule 35 (literal)


State 175

   22 local_statement: statement TK_OC_LE TK_IDENTIFICADOR .

    $default  reduce using rule 22 (local_statement)


State 176

   23 local_statement: statement TK_OC_LE literal .

    $default  reduce using rule 23 (local_statement)


State 177

   34 literal: op_literal .

    $default  reduce using rule 34 (literal)


State 178

   20 local_statement: const_statement TK_OC_LE TK_IDENTIFICADOR .

    $default  reduce using rule 20 (local_statement)


State 179

   21 local_statement: const_statement TK_OC_LE literal .

    $default  reduce using rule 21 (local_statement)


State 180

   81 command_block: init_scope command close_scope .

    $default  reduce using rule 81 (command_block)


State 181

   85 command: command2 endline command .

    $default  reduce using rule 85 (command)


State 182

  111 func_params: TK_PR_CONST type TK_IDENTIFICADOR TK_CE_COMMA func_params .

    $default  reduce using rule 111 (func_params)


State 183

  135 cond: TK_PR_IF TK_CE_PAR_OPEN TK_CE_PAR_CLOSE TK_PR_THEN . command2

    TK_PR_INT            shift, and go to state 1
    TK_PR_FLOAT          shift, and go to state 2
    TK_PR_BOOL           shift, and go to state 3
    TK_PR_CHAR           shift, and go to state 4
    TK_PR_STRING         shift, and go to state 5
    TK_PR_IF             shift, and go to state 57
    TK_PR_WHILE          shift, and go to state 58
    TK_PR_DO             shift, and go to state 59
    TK_PR_INPUT          shift, and go to state 60
    TK_PR_OUTPUT         shift, and go to state 61
    TK_PR_RETURN         shift, and go to state 62
    TK_PR_STATIC         shift, and go to state 63
    TK_PR_CONST          shift, and go to state 64
    TK_CE_SEMICOLON      shift, and go to state 27
    TK_CE_BRA_CURL_OPEN  shift, and go to state 34
    TK_IDENTIFICADOR     shift, and go to state 65

    endline          go to state 66
    statement        go to state 67
    local_statement  go to state 68
    const_statement  go to state 69
    type             go to state 70
    command_block    go to state 71
    init_scope       go to state 72
    command2         go to state 208
    single_command   go to state 75
    flow_command     go to state 76
    assignment       go to state 77
    in               go to state 78
    out              go to state 79
    ret              go to state 80
    func_call        go to state 81
    cond             go to state 82
    whiledo          go to state 83
    dowhile          go to state 84


State 184

  136 cond: TK_PR_IF TK_CE_PAR_OPEN exp TK_PR_THEN . command2

    TK_PR_INT            shift, and go to state 1
    TK_PR_FLOAT          shift, and go to state 2
    TK_PR_BOOL           shift, and go to state 3
    TK_PR_CHAR           shift, and go to state 4
    TK_PR_STRING         shift, and go to state 5
    TK_PR_IF             shift, and go to state 57
    TK_PR_WHILE          shift, and go to state 58
    TK_PR_DO             shift, and go to state 59
    TK_PR_INPUT          shift, and go to state 60
    TK_PR_OUTPUT         shift, and go to state 61
    TK_PR_RETURN         shift, and go to state 62
    TK_PR_STATIC         shift, and go to state 63
    TK_PR_CONST          shift, and go to state 64
    TK_CE_SEMICOLON      shift, and go to state 27
    TK_CE_BRA_CURL_OPEN  shift, and go to state 34
    TK_IDENTIFICADOR     shift, and go to state 65

    endline          go to state 66
    statement        go to state 67
    local_statement  go to state 68
    const_statement  go to state 69
    type             go to state 70
    command_block    go to state 71
    init_scope       go to state 72
    command2         go to state 209
    single_command   go to state 75
    flow_command     go to state 76
    assignment       go to state 77
    in               go to state 78
    out              go to state 79
    ret              go to state 80
    func_call        go to state 81
    cond             go to state 82
    whiledo          go to state 83
    dowhile          go to state 84


State 185

  133 cond: TK_PR_IF TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE . TK_PR_THEN command2
  134     | TK_PR_IF TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE . TK_PR_THEN command2 TK_PR_ELSE command2

    TK_PR_THEN  shift, and go to state 210


State 186

  138 whiledo: TK_PR_WHILE TK_CE_PAR_OPEN TK_CE_PAR_CLOSE TK_PR_DO . command2

    TK_PR_INT            shift, and go to state 1
    TK_PR_FLOAT          shift, and go to state 2
    TK_PR_BOOL           shift, and go to state 3
    TK_PR_CHAR           shift, and go to state 4
    TK_PR_STRING         shift, and go to state 5
    TK_PR_IF             shift, and go to state 57
    TK_PR_WHILE          shift, and go to state 58
    TK_PR_DO             shift, and go to state 59
    TK_PR_INPUT          shift, and go to state 60
    TK_PR_OUTPUT         shift, and go to state 61
    TK_PR_RETURN         shift, and go to state 62
    TK_PR_STATIC         shift, and go to state 63
    TK_PR_CONST          shift, and go to state 64
    TK_CE_SEMICOLON      shift, and go to state 27
    TK_CE_BRA_CURL_OPEN  shift, and go to state 34
    TK_IDENTIFICADOR     shift, and go to state 65

    endline          go to state 66
    statement        go to state 67
    local_statement  go to state 68
    const_statement  go to state 69
    type             go to state 70
    command_block    go to state 71
    init_scope       go to state 72
    command2         go to state 211
    single_command   go to state 75
    flow_command     go to state 76
    assignment       go to state 77
    in               go to state 78
    out              go to state 79
    ret              go to state 80
    func_call        go to state 81
    cond             go to state 82
    whiledo          go to state 83
    dowhile          go to state 84


State 187

  137 whiledo: TK_PR_WHILE TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE . TK_PR_DO command2

    TK_PR_DO  shift, and go to state 212


State 188

  139 dowhile: TK_PR_DO command2 TK_PR_WHILE exp .

    $default  reduce using rule 139 (dowhile)


State 189

   68 exp_art_par: TK_CE_PAR_OPEN exp_bool TK_CE_PAR_CLOSE .

    $default  reduce using rule 68 (exp_art_par)


State 190

  124 in: TK_PR_INPUT exp TK_CE_EG exp .

    $default  reduce using rule 124 (in)


State 191

   53 exp_bool: exp_bool TK_OC_LE exp_bool_ou .
   58 exp_bool_ou: exp_bool_ou . TK_OC_OR exp_bool_e

    TK_OC_OR  shift, and go to state 158

    $default  reduce using rule 53 (exp_bool)


State 192

   54 exp_bool: exp_bool TK_OC_GE exp_bool_ou .
   58 exp_bool_ou: exp_bool_ou . TK_OC_OR exp_bool_e

    TK_OC_OR  shift, and go to state 158

    $default  reduce using rule 54 (exp_bool)


State 193

   55 exp_bool: exp_bool TK_OC_EQ exp_bool_ou .
   58 exp_bool_ou: exp_bool_ou . TK_OC_OR exp_bool_e

    TK_OC_OR  shift, and go to state 158

    $default  reduce using rule 55 (exp_bool)


State 194

   56 exp_bool: exp_bool TK_OC_NE exp_bool_ou .
   58 exp_bool_ou: exp_bool_ou . TK_OC_OR exp_bool_e

    TK_OC_OR  shift, and go to state 158

    $default  reduce using rule 56 (exp_bool)


State 195

   52 exp_bool: exp_bool TK_OC_GT exp_bool_ou .
   58 exp_bool_ou: exp_bool_ou . TK_OC_OR exp_bool_e

    TK_OC_OR  shift, and go to state 158

    $default  reduce using rule 52 (exp_bool)


State 196

   51 exp_bool: exp_bool TK_OC_LT exp_bool_ou .
   58 exp_bool_ou: exp_bool_ou . TK_OC_OR exp_bool_e

    TK_OC_OR  shift, and go to state 158

    $default  reduce using rule 51 (exp_bool)


State 197

   58 exp_bool_ou: exp_bool_ou TK_OC_OR exp_bool_e .
   60 exp_bool_e: exp_bool_e . TK_OC_AND exp_art

    TK_OC_AND  shift, and go to state 159

    $default  reduce using rule 58 (exp_bool_ou)


State 198

   60 exp_bool_e: exp_bool_e TK_OC_AND exp_art .
   62 exp_art: exp_art . TK_CE_PLUS exp_art_t
   63        | exp_art . TK_CE_MINUS exp_art_t

    TK_CE_PLUS   shift, and go to state 160
    TK_CE_MINUS  shift, and go to state 161

    $default  reduce using rule 60 (exp_bool_e)


State 199

   62 exp_art: exp_art TK_CE_PLUS exp_art_t .
   65 exp_art_t: exp_art_t . TK_CE_MUL exp_art_par
   66          | exp_art_t . TK_CE_DIV exp_art_par

    TK_CE_MUL  shift, and go to state 162
    TK_CE_DIV  shift, and go to state 163

    $default  reduce using rule 62 (exp_art)


State 200

   63 exp_art: exp_art TK_CE_MINUS exp_art_t .
   65 exp_art_t: exp_art_t . TK_CE_MUL exp_art_par
   66          | exp_art_t . TK_CE_DIV exp_art_par

    TK_CE_MUL  shift, and go to state 162
    TK_CE_DIV  shift, and go to state 163

    $default  reduce using rule 63 (exp_art)


State 201

   65 exp_art_t: exp_art_t TK_CE_MUL exp_art_par .

    $default  reduce using rule 65 (exp_art_t)


State 202

   66 exp_art_t: exp_art_t TK_CE_DIV exp_art_par .

    $default  reduce using rule 66 (exp_art_t)


State 203

   77 lst_exp: exp TK_CE_COMMA lst_exp .

    $default  reduce using rule 77 (lst_exp)


State 204

   28 const_statement: TK_PR_STATIC TK_PR_CONST type TK_IDENTIFICADOR .

    $default  reduce using rule 28 (const_statement)


State 205

  132 func_call: TK_IDENTIFICADOR TK_CE_PAR_OPEN lst_exp TK_CE_PAR_CLOSE .

    $default  reduce using rule 132 (func_call)


State 206

   12 array: TK_CE_BRA_OPEN lst_exp TK_CE_BRA_CLOSE .

    $default  reduce using rule 12 (array)


State 207

  121 assignment: TK_IDENTIFICADOR array TK_CE_EQUAL exp .

    $default  reduce using rule 121 (assignment)


State 208

  135 cond: TK_PR_IF TK_CE_PAR_OPEN TK_CE_PAR_CLOSE TK_PR_THEN command2 .

    $default  reduce using rule 135 (cond)


State 209

  136 cond: TK_PR_IF TK_CE_PAR_OPEN exp TK_PR_THEN command2 .

    $default  reduce using rule 136 (cond)


State 210

  133 cond: TK_PR_IF TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_THEN . command2
  134     | TK_PR_IF TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_THEN . command2 TK_PR_ELSE command2

    TK_PR_INT            shift, and go to state 1
    TK_PR_FLOAT          shift, and go to state 2
    TK_PR_BOOL           shift, and go to state 3
    TK_PR_CHAR           shift, and go to state 4
    TK_PR_STRING         shift, and go to state 5
    TK_PR_IF             shift, and go to state 57
    TK_PR_WHILE          shift, and go to state 58
    TK_PR_DO             shift, and go to state 59
    TK_PR_INPUT          shift, and go to state 60
    TK_PR_OUTPUT         shift, and go to state 61
    TK_PR_RETURN         shift, and go to state 62
    TK_PR_STATIC         shift, and go to state 63
    TK_PR_CONST          shift, and go to state 64
    TK_CE_SEMICOLON      shift, and go to state 27
    TK_CE_BRA_CURL_OPEN  shift, and go to state 34
    TK_IDENTIFICADOR     shift, and go to state 65

    endline          go to state 66
    statement        go to state 67
    local_statement  go to state 68
    const_statement  go to state 69
    type             go to state 70
    command_block    go to state 71
    init_scope       go to state 72
    command2         go to state 213
    single_command   go to state 75
    flow_command     go to state 76
    assignment       go to state 77
    in               go to state 78
    out              go to state 79
    ret              go to state 80
    func_call        go to state 81
    cond             go to state 82
    whiledo          go to state 83
    dowhile          go to state 84


State 211

  138 whiledo: TK_PR_WHILE TK_CE_PAR_OPEN TK_CE_PAR_CLOSE TK_PR_DO command2 .

    $default  reduce using rule 138 (whiledo)


State 212

  137 whiledo: TK_PR_WHILE TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_DO . command2

    TK_PR_INT            shift, and go to state 1
    TK_PR_FLOAT          shift, and go to state 2
    TK_PR_BOOL           shift, and go to state 3
    TK_PR_CHAR           shift, and go to state 4
    TK_PR_STRING         shift, and go to state 5
    TK_PR_IF             shift, and go to state 57
    TK_PR_WHILE          shift, and go to state 58
    TK_PR_DO             shift, and go to state 59
    TK_PR_INPUT          shift, and go to state 60
    TK_PR_OUTPUT         shift, and go to state 61
    TK_PR_RETURN         shift, and go to state 62
    TK_PR_STATIC         shift, and go to state 63
    TK_PR_CONST          shift, and go to state 64
    TK_CE_SEMICOLON      shift, and go to state 27
    TK_CE_BRA_CURL_OPEN  shift, and go to state 34
    TK_IDENTIFICADOR     shift, and go to state 65

    endline          go to state 66
    statement        go to state 67
    local_statement  go to state 68
    const_statement  go to state 69
    type             go to state 70
    command_block    go to state 71
    init_scope       go to state 72
    command2         go to state 214
    single_command   go to state 75
    flow_command     go to state 76
    assignment       go to state 77
    in               go to state 78
    out              go to state 79
    ret              go to state 80
    func_call        go to state 81
    cond             go to state 82
    whiledo          go to state 83
    dowhile          go to state 84


State 213

  133 cond: TK_PR_IF TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_THEN command2 .
  134     | TK_PR_IF TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_THEN command2 . TK_PR_ELSE command2

    TK_PR_ELSE  shift, and go to state 215

    $default  reduce using rule 133 (cond)


State 214

  137 whiledo: TK_PR_WHILE TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_DO command2 .

    $default  reduce using rule 137 (whiledo)


State 215

  134 cond: TK_PR_IF TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_THEN command2 TK_PR_ELSE . command2

    TK_PR_INT            shift, and go to state 1
    TK_PR_FLOAT          shift, and go to state 2
    TK_PR_BOOL           shift, and go to state 3
    TK_PR_CHAR           shift, and go to state 4
    TK_PR_STRING         shift, and go to state 5
    TK_PR_IF             shift, and go to state 57
    TK_PR_WHILE          shift, and go to state 58
    TK_PR_DO             shift, and go to state 59
    TK_PR_INPUT          shift, and go to state 60
    TK_PR_OUTPUT         shift, and go to state 61
    TK_PR_RETURN         shift, and go to state 62
    TK_PR_STATIC         shift, and go to state 63
    TK_PR_CONST          shift, and go to state 64
    TK_CE_SEMICOLON      shift, and go to state 27
    TK_CE_BRA_CURL_OPEN  shift, and go to state 34
    TK_IDENTIFICADOR     shift, and go to state 65

    endline          go to state 66
    statement        go to state 67
    local_statement  go to state 68
    const_statement  go to state 69
    type             go to state 70
    command_block    go to state 71
    init_scope       go to state 72
    command2         go to state 216
    single_command   go to state 75
    flow_command     go to state 76
    assignment       go to state 77
    in               go to state 78
    out              go to state 79
    ret              go to state 80
    func_call        go to state 81
    cond             go to state 82
    whiledo          go to state 83
    dowhile          go to state 84


State 216

  134 cond: TK_PR_IF TK_CE_PAR_OPEN exp TK_CE_PAR_CLOSE TK_PR_THEN command2 TK_PR_ELSE command2 .

    $default  reduce using rule 134 (cond)
